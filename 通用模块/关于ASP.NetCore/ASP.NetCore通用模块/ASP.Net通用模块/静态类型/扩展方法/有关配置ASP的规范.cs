
/*问：由于服务之间的互相依赖，ASP应用程序的配置十分复杂，
  应该如何在保证可扩展性的前提下简化这一点？
  答：可以将依赖其他服务的服务和中间件分割为以下两种：

  1.复杂模式，它需要向IServiceCollection请求服务，
  因此需要手动配置依赖注入，但是能够提供最大的可扩展性

  2.简单模式，它内置了所有所需要的服务，几乎不需要配置，
  但是可扩展性也非常有限，按照规范，简单模式的服务和中间件应该加上Simple后缀

  由于复杂模式和简单模式共享除请求服务以外的所有代码，因此执行这种开发模式时，
  请务必对IServiceProvider进行良好抽象，以避免重复的劳动，或者两种模式存在不同的行为*/